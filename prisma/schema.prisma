// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Board {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  teamspaceId String
  columns Column[]
  color String
  imageThumbUrl String @default("")
  imageFullUrl String @default("")
  
  @@index([teamspaceId])
}

model Column {
  id String @id @default(cuid())
  title String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  boardId String
  board   Board   @relation(fields: [boardId], references: [id], onDelete: Cascade)
  position Int
  tasks Task[]

  @@index([boardId])
  @@unique([id, boardId])
}

model Task {
  id        String   @id @default(cuid())
  title     String
  dueDate   DateTime?
  reminder  Boolean  @default(false)
  repeat    String // 'daily', 'weekly', 'monthly'
  status    String   @default("in-progress") // 'in-progress', 'completed', 'cancelled'
  category  String
  userId    String   // For authentication
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  columnId  String?
  column    Column?  @relation(fields: [columnId], references: [id], onDelete: Cascade)
  position  Int?     // Changed from Int to Int?

  @@index([userId])
  @@index([columnId])
  @@unique([columnId, position])
}

model Content {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String

  @@index([userId])
  @@unique([id, userId])
}

